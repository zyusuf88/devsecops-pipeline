name: Terraform Deployment 
on:
  workflow_dispatch: 
    inputs:
      confirm_deploy:
        description: Type "yes" to confirm deployment'
        required: true 
        type: string

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

permissions:
    contents: read
    pull-requests: write

jobs:
  terraform:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_deploy == 'yes'

    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkov Security Scan
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ./terraform  
        framework: terraform
        skip_check: CKV_AWS_192,CKV2_AWS_31,CKV_AWS_21,CKV_AWS_145,CKV2_AWS_11,CKV_AWS_18,CKV2_AWS_62,CKV2_AWS_61,CKV_AWS_144,CKV2_AWS_12,CKV_AWS_260,CKV2_AWS_5,CKV_AWS_150 # skipping non critical checkov checks for testing env - to be added in prod



    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0

    - name: Terraform Init
      run: >
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=${{ secrets.TERRAFORM_STATE_KEY }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="encrypt=true"

    - name: Terraform Plan
      working-directory: ./terraform
      run: |
        terraform plan \
          -var="domain_name=${{ vars.DOMAIN_NAME }}" \
          -var="project_name=${{ vars.PROJECT_NAME }}" \
          -var="task_role_arn=${{ secrets.TASK_ROLE_ARN }}" \
          -var="execution_role_arn=${{ secrets.EXECUTION_ROLE_ARN }}" \
           -var="record_name=${{ vars.RECORD_NAME }}" \
          -input=false \
          -out=tfplan

    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve


        