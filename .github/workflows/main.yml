name: CI/CD Pipeline

on:
  push:
     branches:
  #     - 'feature/*'  
  # pull_request:
  #   branches:
     - main                       

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-2
      TF_VAR_acm_certificate_arn: ${{ secrets.ACM_CERTIFICATE_ARN }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_threat_app_container_image: ${{ secrets.THREAT_APP_CONTAINER_IMAGE }}
      TF_VAR_vpc_cidr: "10.0.0.0/16"
      TF_VAR_aws_subnet_1: "10.0.1.0/24"
      TF_VAR_aws_subnet_2: "10.0.2.0/24"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # - name: Set up Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '18'

      # - name: Install Dependencies
      #   run: yarn install

      # - name: Run Tests
      #   run: yarn test

      # - name: Build Project
      #   run: yarn build

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform 

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform 

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform 

